// <auto-generated />
using System;
using Group_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Group_Project.Migrations
{
    [DbContext(typeof(AppointmentDbContext))]
    [Migration("20210317214635_myMigrations3")]
    partial class myMigrations3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Group_Project.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppointmentId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Group_Project.Models.Availablity", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AppointmentListViewModelKey")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Date");

                    b.HasIndex("AppointmentListViewModelKey");

                    b.ToTable("Availablities");
                });

            modelBuilder.Entity("Group_Project.Models.ViewModels.AppointmentListViewModel", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateInfoDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.HasIndex("DateInfoDate");

                    b.ToTable("AppointmentListViewModels");
                });

            modelBuilder.Entity("Group_Project.Models.ViewModels.DateInfo", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.HasKey("Date");

                    b.ToTable("DateInfos");
                });

            modelBuilder.Entity("Group_Project.Models.Availablity", b =>
                {
                    b.HasOne("Group_Project.Models.ViewModels.AppointmentListViewModel", null)
                        .WithMany("Availablities")
                        .HasForeignKey("AppointmentListViewModelKey");
                });

            modelBuilder.Entity("Group_Project.Models.ViewModels.AppointmentListViewModel", b =>
                {
                    b.HasOne("Group_Project.Models.ViewModels.DateInfo", "DateInfo")
                        .WithMany()
                        .HasForeignKey("DateInfoDate");

                    b.Navigation("DateInfo");
                });

            modelBuilder.Entity("Group_Project.Models.ViewModels.AppointmentListViewModel", b =>
                {
                    b.Navigation("Availablities");
                });
#pragma warning restore 612, 618
        }
    }
}
